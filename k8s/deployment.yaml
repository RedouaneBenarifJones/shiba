apiVersion: apps/v1
kind: Deployment
metadata:
  name: d-users-service
  namespace: ns-shiba
  labels:
    app: shiba
spec:
  selector:
    matchLabels:
      name: p-users-service
  replicas: 7
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: users-service
      labels:
        name: p-users-service
        app: shiba
    spec:
      containers:
        - name: mongo
          image: mongo
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                ["mongosh", "--quiet", "--eval", "db.runCommand('ping').ok"]
            initialDelaySeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /status
              port: 27017
            initialDelaySeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: cm-shiba
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: cm-shiba
                  key: MONGO_INITDB_ROOT_PASSWORD
          ports:
            - containerPort: 27017
              name: mongo-svc-port

        - name: users-service
          image: 79adamjones/shiba-users-service-image:latest
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 100Mi
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          env:
            - name: PYTHONPATH
              valueFrom:
                configMapKeyRef:
                  name: cm-shiba
                  key: PYTHONPATH
            - name: MONGODB_HOST
              valueFrom:
                configMapKeyRef:
                  name: cm-shiba
                  key: MONGODB_HOST
            - name: MONGODB_PORT
              valueFrom:
                configMapKeyRef:
                  name: cm-shiba
                  key: MONGODB_PORT
            - name: MONGODB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: cm-shiba
                  key: MONGODB_DATABASE
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: cm-shiba
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: cm-shiba
                  key: MONGO_INITDB_ROOT_PASSWORD
          ports:
            - containerPort: 80
              name: users-svc-port
          volumeMounts:
            - name: v-users-service
              mountPath: /mongo/data
      volumes:
        - name: v-users-service
          hostPath:
            path: /mongo/data
      restartPolicy: Always
